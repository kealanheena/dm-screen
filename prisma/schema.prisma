// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(cuid())
  email String @unique
  username String @unique
  clerkId String @unique
  name String?
  bio String?
  image String?
  location String? 
  website String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // TODO: add DB Relations Screens, Players, Messages

  // Relations

  posts Post[]
  comments Comments[]
  likes Likes[]

  followers Follows[] @relation("following") // user who follow this user
  following Follows[] @relation("follower") // users this user follows

  notifications Notification @relation("userNotifications") // notifications recieved by a user
  notificationCreated Notification @relation("notificationCreator") // notifications triggered by a user
}

model Post {
  id String @id @default(cuid())
  authorId String
  content String?
  image String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  // "onDelete: cascade" means delete all posts if the author is deleted
  author User @relation(fields: [authorId], references: [id], onDelete: Cascade)
  comments Comment[]
  likes Like[]
  notifications Notification[]
}
